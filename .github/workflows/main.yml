name: CI/CD Pipeline for Lootopia

on:
  push:
    branches:
      - main

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies (Expo web project)
        run: npm install
        working-directory: frontend

      - name: Install lightningcss
        run: npm install lightningcss --build-from-source
        working-directory: frontend

      - name: Build Expo web project
        run: npx expo export --platform web
        working-directory: frontend

      - name: Install Netlify CLI
        run: npm install -g netlify-cli
        working-directory: frontend

      - name: Deploy to Netlify
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        run: netlify deploy --dir=dist --site=${{ secrets.SITE_ID }} --prod
        working-directory: frontend


    env:
      EXPO_PUBLIC_FIREBASE_API_KEY: ${{ secrets.EXPO_PUBLIC_FIREBASE_API_KEY }}
      EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN }}
      EXPO_PUBLIC_FIREBASE_DATABASE_URL: ${{ secrets.EXPO_PUBLIC_FIREBASE_DATABASE_URL }}
      EXPO_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.EXPO_PUBLIC_FIREBASE_PROJECT_ID }}
      EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET }}
      EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
      EXPO_PUBLIC_FIREBASE_APP_ID: ${{ secrets.EXPO_PUBLIC_FIREBASE_APP_ID }}

  #CI/CD Cleavr backend Deployment:
  # init:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Start Cleavr Deployment
  #       uses: fjogeleit/http-request-action@master
  #       with:
  #         url: '${{ secrets.DEPLOY_TRIGGER_HOOK_CLEAVR_EBDQ8YOQFP }}'
  #         method: 'POST'
  #         data: '{"status": "init" }'
  #         timeout: 60000
  # build:
  #   needs: init
  #   runs-on: ubuntu-22.04
  #   outputs:
  #     cleavr-step-status: ${{ toJson(steps) }}
  #     artifact-formatted-time: ${{ steps.artifact.outputs.formattedTime }}
  #   defaults:
  #     run:
  #       working-directory: backend
  #   steps:
  #     - uses: actions/checkout@v3
  #       id: checkout

  #     - uses: actions/setup-node@v3
  #       id: setup-node
  #       with:
  #         node-version: '20'

  #     - uses: bahmutov/npm-install@v1
  #       id: npm-install
  #       with:
  #         working-directory: backend

  #     - name: Build app
  #       id: build-app
  #       run: npm run build --production

  #     - name: Generate artifact name
  #       id: artifact
  #       uses: josStorer/get-current-time@v2.0.2
  #       with:
  #         format: YYYYMMDDHHmmss
  #         utcOffset: "+08:00"

  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: ${{ steps.artifact.outputs.formattedTime }}
  #         path: backend/build/
  #         if-no-files-found: error

  # complete:
  #   if: always()
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Complete Cleavr Deployment
  #       uses: fjogeleit/http-request-action@master
  #       with:
  #         url: '${{ secrets.DEPLOY_TRIGGER_HOOK_CLEAVR_EBDQ8YOQFP }}'
  #         method: 'POST'
  #         data: '{"status": "${{ needs.build.result }}" , "steps": ${{ toJson(needs.build.outputs.cleavr-step-status) }} }'
  #         timeout: 60000
  #         customHeaders: '{"artifact": "${{ needs.build.outputs.artifact-formatted-time }}"}'